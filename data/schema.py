"""Schema for Air Five DataFrames."""
from typing import Dict

from dill import dump  # noqa: S403 - security warnings n/a
from numpy import float64, int64
from pandera import Check, Column, DataFrameSchema

dict_schema: Dict[str, Dict[str, Dict[str, DataFrameSchema]]] = {
    "air": {
        "one": {
            "extracted": DataFrameSchema(
                columns={
                    "ShortPollName": Column(
                        pandas_dtype=str,
                        checks=Check.isin(
                            [
                                "B[a]p",
                                "B[a]p Total",
                                "CO",
                                "CO Total",
                                "Dioxins",
                                "Dioxins Total",
                                "NH3",
                                "NH3 Total",
                                "NOx",
                                "NOx Total",
                                "Pb",
                                "Pb Total",
                                "PM10",
                                "PM10 Total",
                                "PM2.5",
                                "PM2.5 Total",
                                "SO2",
                                "SO2 Total",
                                "VOC",
                                "VOC Total",
                            ]
                        ),
                    ),
                    "NFRCode": Column(
                        pandas_dtype=str,
                        checks=Check.isin(
                            [
                                "1A1a",
                                "1A1b",
                                "1A1c",
                                "1A2a",
                                "1A2b",
                                "1A2c",
                                "1A2d",
                                "1A2e",
                                "1A2f",
                                "1A2gvii",
                                "1A2gviii",
                                "1A3ai(i)",
                                "1A3aii(i)",
                                "1A3bi",
                                "1A3bii",
                                "1A3biii",
                                "1A3biv",
                                "1A3bv",
                                "1A3bvi",
                                "1A3bvii",
                                "1A3c",
                                "1A3dii",
                                "1A3eii",
                                "1A4ai",
                                "1A4bi",
                                "1A4bii",
                                "1A4ci",
                                "1A4cii",
                                "1A4ciii",
                                "1A5b",
                                "1B1a",
                                "1B1b",
                                "1B2ai",
                                "1B2aiv",
                                "1B2av",
                                "1B2b",
                                "1B2c",
                                "2A1",
                                "2A3",
                                "2A5a",
                                "2A5b",
                                "2A6",
                                "2B10a",
                                "2B10b",
                                "2B2",
                                "2B3",
                                "2B6",
                                "2B7",
                                "2C1",
                                "2C3",
                                "2C4",
                                "2C5",
                                "2C6",
                                "2C7a",
                                "2C7b",
                                "2C7c",
                                "2D3a",
                                "2D3b",
                                "2D3d",
                                "2D3e",
                                "2D3f",
                                "2D3g",
                                "2D3h",
                                "2D3i",
                                "2G",
                                "2H1",
                                "2H2",
                                "2H3",
                                "2I",
                                "2K",
                                "3B1a",
                                "3B1b",
                                "3B2",
                                "3B3",
                                "3B4d",
                                "3B4e",
                                "3B4gi",
                                "3B4gii",
                                "3B4giii",
                                "3B4giv",
                                "3B4h",
                                "3Da1",
                                "3Da2a",
                                "3Da2b",
                                "3Da2c",
                                "3Da3",
                                "3Da4",
                                "3Dc",
                                "3De",
                                "3F",
                                "5A",
                                "5B1",
                                "5B2",
                                "5C1a",
                                "5C1bii",
                                "5C1biii",
                                "5C1biv",
                                "5C1bv",
                                "5C2",
                                "5D1",
                                "5D2",
                                "5E",
                                "6A",
                            ]
                        ),
                        nullable=True,
                    ),
                    "SourceName": Column(
                        pandas_dtype=str,
                        checks=Check.isin(
                            [
                                "Accidental fires - dwellings",
                                "Accidental fires - other buildings",
                                "Accidental fires - vehicles",
                                "Adipic acid production",
                                "Aerosols - carcare products",
                                "Aerosols - cosmetics and toiletries",
                                "Aerosols - household products",
                                "Agricultural engines",
                                "Agricultural Horses FAM - direct",
                                "Agricultural Horses PRP - direct",
                                "Agricultural Horses Wastes - Direct",
                                "Agricultural operations",
                                "Agricultural waste burning",
                                "Agriculture - agrochemicals use",
                                "Agriculture - mobile machinery",
                                "Agriculture - stationary combustion",
                                "Aircraft -  military",
                                "Aircraft - domestic take off and landing",
                                "Aircraft - international take off and landing",
                                "Aircraft - support vehicles",
                                "Aircraft between UK and Bermuda - TOL",
                                "Aircraft between UK and CDs - TOL",
                                "Aircraft between UK and Gibraltar - TOL",
                                "Aircraft between UK and other OTs (excl Gib. and Bermuda) - TOL",  # noqa: B950
                                "Aircraft engines",
                                "Alumina production",
                                "Ammonia production - combustion",
                                "Anaerobic Digestion",
                                "Arable",
                                "Arable - Direct",
                                "Autogeneration - exported to grid",
                                "Autogenerators",
                                "Basic oxygen furnaces",
                                "Bitumen use",
                                "Blast furnaces",
                                "Bonfire night",
                                "Bread baking",
                                "Brewing - fermentation",
                                "Brewing - wort boiling",
                                "Brick manufacture - Fletton",
                                "Brick manufacture - non Fletton",
                                "Capacitors",
                                "Cement - non-decarbonising",
                                "Cement and concrete batching",
                                "Cement production - combustion",
                                "Charcoal production",
                                "Chemical industry - alkyl lead",
                                "Chemical industry - ammonia based fertilizer",
                                "Chemical industry - ammonia use",
                                "Chemical industry - carbon black",
                                "Chemical industry - chromium chemicals",
                                "Chemical industry - general",
                                "Chemical industry - halogenated chemicals",
                                "Chemical industry - magnesia",
                                "Chemical industry - nitric acid use",
                                "Chemical industry - pesticide production",
                                "Chemical industry - phosphate based fertilizers",
                                "Chemical industry - pigment manufacture",
                                "Chemical industry - reforming",
                                "Chemical industry - soda ash",
                                "Chemical industry - sulphuric acid use",
                                "Chemical industry - titanium dioxide",
                                "Chemicals (combustion)",
                                "Cider manufacture",
                                "Cigarette smoking",
                                "Coal tar and bitumen processes",
                                "Coal tar distillation",
                                "Coating manufacture - adhesives",
                                "Coating manufacture - inks",
                                "Coating manufacture - other coatings",
                                "Coke production",
                                "Cold rolling of steel",
                                "Collieries - combustion",
                                "Composting (at household)",
                                "Composting (at permit sites)",
                                "Construction of apartment buildings",
                                "Construction of houses",
                                "Copper alloy and semis production",
                                "Crematoria",
                                "Creosote use",
                                "Cultivated crops",
                                "Dairy - Dairy Cows",
                                "Decorative paint - retail decorative",
                                "Decorative paint - trade decorative",
                                "Deep-mined coal",
                                "Deer FAM - Direct",
                                "Deer PRP - Direct",
                                "Deer Wastes - Direct",
                                "Dewatering of lead concentrates",
                                "Domestic combustion",
                                "Domestic Horses FAM - Direct",
                                "Domestic Horses PRP - Direct",
                                "Domestic Horses Wastes",
                                "Domestic pets",
                                "Dry cleaning",
                                "Electric arc furnaces",
                                "FAM - direct",
                                "Field burning",
                                "Film coating",
                                "Fireworks",
                                "Fishing vessels",
                                "Foam blowing",
                                "Food & drink, tobacco (combustion)",
                                "Foot and mouth pyres",
                                "Foundries",
                                "Fragmentisers",
                                "Gas leakage",
                                "Gas production",
                                "Gasification processes",
                                "Glass – ballotini",
                                "Glass - container",
                                "Glass - continuous filament glass fibre",
                                "Glass - domestic",
                                "Glass - flat",
                                "Glass - frits",
                                "Glass - glass wool",
                                "Glass - lead crystal",
                                "Glass - special",
                                "Glazed ceramics",
                                "Goats FAM - Direct",
                                "Goats PRP - Direct",
                                "Goats Wastes - Direct",
                                "Grass",
                                "Grass - Direct",
                                "Grazing",
                                "Hot rolling of steel",
                                "House and garden machinery",
                                "Housing",
                                "Incineration",
                                "Incineration - animal carcases",
                                "Incineration - chemical waste",
                                "Incineration - clinical waste",
                                "Incineration - sewage sludge",
                                "Industrial adhesives - other",
                                "Industrial adhesives - pressure sensitive tapes",
                                "Industrial coatings - agricultural and construction",
                                "Industrial coatings - aircraft",
                                "Industrial coatings - automotive",
                                "Industrial coatings - coil coating",
                                "Industrial coatings - commercial vehicles",
                                "Industrial coatings - drum",
                                "Industrial coatings - high performance",
                                "Industrial coatings - marine",
                                "Industrial coatings - metal and plastic",
                                "Industrial coatings - metal packaging",
                                "Industrial coatings - vehicle refinishing",
                                "Industrial coatings - wood",
                                "Industrial engines",
                                "Industrial off-road mobile machinery",
                                "Industrial Waste Water Treatment",
                                "Infant emissions from nappies",
                                "Inland goods-carrying vessels",
                                "Integrated steelworks - other processes",
                                "Integrated steelworks - stockpiles",
                                "Iron and steel - combustion plant",
                                "Iron and steel - flaring",
                                "Landfill",
                                "Landspreading of manure digestates (from AD)",
                                "Landspreading of non-manure digestates (from AD)",
                                "Lead battery manufacture",
                                "Leather coating",
                                "Leather degreasing",
                                "Lime production - non decarbonising",
                                "Magnesium alloying",
                                "Malting - all",
                                "Marine engines",
                                "Methanol production – combustion",
                                "Miscellaneous industrial/commercial combustion",
                                "Motorboats / workboats (e.g. canal boats, dredgers, service boats, tourist boats, river boats)",  # noqa
                                "Nickel production",
                                "Nitric acid production",
                                "Non-aerosol products - automotive products",
                                "Non-aerosol products - cosmetics and toiletries",
                                "Non-aerosol products - domestic adhesives",
                                "Non-aerosol products - household products",
                                "Non-aerosol products - paint thinner",
                                "Non-Ferrous Metal (combustion)",
                                "Non-ferrous metal processes",
                                "Non-residential construction",
                                "Nuclear fuel production",
                                "Open-cast coal",
                                "Other cattle - Beef females for slaughter",
                                "Other cattle - Bulls for breeding",
                                "Other cattle - Cereal fed bull",
                                "Other cattle - Cows",
                                "Other cattle - Dairy Calves Female",
                                "Other cattle - Dairy In Calf Heifers",
                                "Other cattle - Dairy Replacements Female",
                                "Other cattle - Heifers for breeding",
                                "Other cattle - Steers",
                                "Other food - animal feed manufacture",
                                "Other food - cakes biscuits and cereals",
                                "Other food - coffee roasting",
                                "Other food - margarine and other solid fats",
                                "Other food - meat fish and poultry",
                                "Other food - sugar production",
                                "Other industrial combustion",
                                "Other industry - asphalt manufacture",
                                "Other industry - part B processes",
                                "Other non-ferrous metal processes",
                                "Other rubber products",
                                "Other solvent use",
                                "Paper coating",
                                "Paper production",
                                "Parks, Gardens & Golf courses",
                                "Personal watercraft e.g. jet ski",
                                "Petrol stations - petrol delivery",
                                "Petrol stations - spillages",
                                "Petrol stations - storage tanks",
                                "Petrol stations - vehicle refuelling",
                                "Petrol terminals - storage",
                                "Petrol terminals - tanker loading",
                                "Petroleum processes",
                                "Pig - Boar",
                                "Pig - Fattening Pig < 20 kg",
                                "Pig - Fattening Pig > 80 kg",
                                "Pig - Fattening Pig 20 to 80 kg",
                                "Pig - Gilt",
                                "Pig - Sow",
                                "Poultry - Breeding Flock",
                                "Poultry - Broilers",
                                "Poultry - Ducks",
                                "Poultry - Geese",
                                "Poultry - Growing Pullets",
                                "Poultry - Laying Hens",
                                "Poultry - Other",
                                "Poultry - Turkeys",
                                "Power stations",
                                "Primary aluminium production - anode baking",
                                "Primary aluminium production - general",
                                "Primary aluminium production - pre-baked anode process",  # noqa: B950
                                "Primary aluminium production - vertical stud Soderberg process",  # noqa: B950
                                "Primary lead/zinc production",
                                "Printing - flexible packaging",
                                "Printing - heatset web offset",
                                "Printing - metal decorating",
                                "Printing - newspapers",
                                "Printing - other flexography",
                                "Printing - other inks",
                                "Printing - other offset",
                                "Printing - overprint varnishes",
                                "Printing - print chemicals",
                                "Printing - publication gravure",
                                "Printing - screen printing",
                                "Professional Horses FAM - Direct",
                                "Professional Horses PRP - Direct",
                                "Professional horses wastes",
                                "PRP - direct",
                                "Public sector combustion",
                                "Pulp, Paper and Print (combustion)",
                                "Quarrying",
                                "Rail - coal",
                                "Railways - freight",
                                "Railways - intercity",
                                "Railways - regional",
                                "Railways - stationary combustion",
                                "Refineries - combustion",
                                "Refineries - drainage",
                                "Refineries - flares",
                                "Refineries - general",
                                "Refineries - process",
                                "Refineries - road/rail loading",
                                "Refineries - tankage",
                                "Refractories - chromite based",
                                "Refractories - non chromite based",
                                "Regeneration of activated carbon",
                                "Road construction",
                                "Road dressings",
                                "Road transport - buses and coaches - motorway driving",
                                "Road transport - buses and coaches - rural driving",
                                "Road transport - buses and coaches - urban driving",
                                "Road transport - cars - cold start",
                                "Road transport - cars - evaporative",
                                "Road transport - cars - motorway driving",
                                "Road transport - cars - rural driving",
                                "Road transport - cars - urban driving",
                                "Road Transport - cars Dioxins/PCP",
                                "Road transport - HGV articulated - motorway driving",
                                "Road transport - HGV articulated - rural driving",
                                "Road transport - HGV articulated - urban driving",
                                "Road transport - HGV rigid - motorway driving",
                                "Road transport - HGV rigid - rural driving",
                                "Road transport - HGV rigid - urban driving",
                                "Road Transport - HGVs/buses Dioxins",
                                "Road transport - LGVs - cold start",
                                "Road transport - LGVs - evaporative",
                                "Road transport - LGVs - motorway driving",
                                "Road transport - LGVs - rural driving",
                                "Road transport - LGVs - urban driving",
                                "Road Transport - LGVs Dioxins",
                                "Road Transport - Mopeds & Motorcycles Dioxins",
                                "Road transport - mopeds (<50cc 2st) - evaporative",
                                "Road transport - mopeds (<50cc 2st) - urban driving",
                                "Road transport - motorcycle (>50cc  2st) - evaporative",  # noqa: B950
                                "Road transport - motorcycle (>50cc  2st) - rural driving",  # noqa: B950
                                "Road transport - motorcycle (>50cc  2st) - urban driving",  # noqa: B950
                                "Road transport - motorcycle (>50cc  4st) - evaporative",  # noqa: B950
                                "Road transport - motorcycle (>50cc  4st) - motorway driving",  # noqa: B950
                                "Road transport - motorcycle (>50cc  4st) - rural driving",  # noqa: B950
                                "Road transport - motorcycle (>50cc  4st) - urban driving",  # noqa: B950
                                "Road vehicle engines",
                                "Sailing boats with auxiliary engines",
                                "Sea going vessel loading",
                                "Secondary aluminium production",
                                "Secondary copper production",
                                "Secondary lead production",
                                "Seed oil extraction",
                                "Sewage Sludge Application - Direct",
                                "Sewage sludge decomposition",
                                "Sheep - Ewe",
                                "Sheep - Lamb",
                                "Sheep - Ram",
                                "Ship purging",
                                "Shipping - coastal",
                                "Shipping - naval",
                                "Shipping between UK and Bermuda",
                                "Shipping between UK and CDs",
                                "Shipping between UK and Gibraltar",
                                "Shipping between UK and OTs (excl. Gib and Bermuda)",
                                "Sinter production",
                                "Slag clement production",
                                "Small-scale waste burning",
                                "Solid smokeless fuel production",
                                "Solvent and oil recovery",
                                "Spirit manufacture - casking",
                                "Spirit manufacture - distillation",
                                "Spirit manufacture - fermentation",
                                "Spirit manufacture - other maturation",
                                "Spirit manufacture - Scotch whisky maturation",
                                "Spirit manufacture - spent grain drying",
                                "Spread Manure",
                                "Storage",
                                "Sugar beet processing",
                                "Sulphuric acid production",
                                "Surface cleaning - 111-trichloroethane",
                                "Surface cleaning - dichloromethane",
                                "Surface cleaning - hydrocarbons",
                                "Surface cleaning - oxygenated solvents",
                                "Surface cleaning - tetrachloroethylene",
                                "Surface cleaning - trichloroethylene",
                                "Textile coating",
                                "Tin production",
                                "Transformers",
                                "Tyre manufacture",
                                "Unglazed ceramics",
                                "Upstream Gas Production - flaring",
                                "Upstream Gas Production - fuel combustion",
                                "Upstream Gas Production - Gas terminal storage",
                                "Upstream Gas Production - Offshore Well Testing",
                                "Upstream Gas Production - process emissions",
                                "Upstream Gas Production - venting",
                                "Upstream oil and gas production - combustion at gas separation plant",  # noqa: B950
                                "Upstream Oil Production - flaring",
                                "Upstream Oil Production - fuel combustion",
                                "Upstream Oil Production - Offshore Oil Loading",
                                "Upstream Oil Production - Offshore Well Testing",
                                "Upstream Oil Production - Oil terminal storage",
                                "Upstream Oil Production - Onshore Oil Loading",
                                "Upstream Oil Production - process emissions",
                                "Upstream Oil Production - venting",
                                "Wastes",
                                "Wastes - Direct",
                                "Wine manufacture",
                                "Wood impregnation - creosote",
                                "Wood impregnation - general",
                                "Wood impregnation - LOSP",
                                "Wood products manufacture",
                                "Yarding",
                                "Zinc alloy and semis production",
                                "Zinc oxide production",
                            ]
                        ),
                        nullable=True,
                    ),
                    r"\d{4}": Column(pandas_dtype=float, nullable=True, regex=True),
                },
                coerce=True,
                strict=True,
            ),
            "transformed": DataFrameSchema(
                columns={
                    "ShortPollName": Column(
                        pandas_dtype=str,
                        checks=Check.isin(["NH3", "NOx", "SO2", "NMVOC", "PM2.5"]),
                    ),
                    "EmissionYear": Column(
                        pandas_dtype=int, checks=Check.greater_than_or_equal_to(1990)
                    ),
                    "Emission": Column(
                        pandas_dtype=float, checks=Check.greater_than_or_equal_to(0.0)
                    ),
                },
                coerce=True,
                strict=True,
            ),
            "enriched": DataFrameSchema(
                columns={
                    "ShortPollName": Column(
                        pandas_dtype=str,
                        checks=Check.isin(["NH3", "NOx", "SO2", "NMVOC", "PM2.5"]),
                    ),
                    "EmissionYear": Column(
                        pandas_dtype=int, checks=Check.greater_than_or_equal_to(1990)
                    ),
                    "Emission": Column(
                        pandas_dtype=float, checks=Check.greater_than_or_equal_to(0.0)
                    ),
                    "Index": Column(
                        pandas_dtype=float, checks=Check.greater_than_or_equal_to(0.0)
                    ),
                },
                coerce=True,
                strict=True,
            ),
        },
        "two": {
            "extracted": DataFrameSchema(
                columns={
                    "NCFormat": Column(
                        pandas_dtype=str,
                        checks=Check.isin(
                            [
                                "Agriculture",
                                "Agriculture Total",
                                "Business",
                                "Business Total",
                                "Energy Supply",
                                "Energy Supply Total",
                                "Grand Total",
                                "Industrial processes",
                                "Industrial processes Total",
                                "Land use, land use change and forestry",
                                "Land use, land use change and forestry Total",
                                "Public",
                                "Public Total",
                                "Residential",
                                "Residential Total",
                                "Transport",
                                "Transport Total",
                                "Waste Management",
                                "Waste Management Total",
                            ]
                        ),
                        nullable=True,
                    ),
                    "IPCC": Column(
                        pandas_dtype=str,
                        checks=Check.isin(
                            [
                                "1A1ai_Public_Electricity&Heat_Production",
                                "1A1b_Petroleum_Refining",
                                "1A1ci_Manufacture_of_solid_fuels",
                                "1A1cii_Oil_and_gas_extraction",
                                "1A1ciii_Other_energy_industries",
                                "1A2a_Iron_and_steel",
                                "1A2b_Non-Ferrous_Metals",
                                "1A2c_Chemicals",
                                "1A2d_Pulp_Paper_Print",
                                "1A2e_food_processing_beverages_and_tobacco",
                                "1A2f_Non-metallic_minerals",
                                "1A2gvii_Off-road_vehicles_and_other_machinery",
                                "1A2gviii_Other_manufacturing_industries_and_construction",  # noqa: B950 - Line length caused by indentation
                                "1A3a_Domestic_aviation",
                                "1A3bi_Cars",
                                "1A3bii_Light_duty_trucks",
                                "1A3biii_Heavy_duty_trucks_and_buses",
                                "1A3biv_Motorcycles",
                                "1A3bv_Other_road_transport",
                                "1A3c_Railways",
                                "1A3d_Domestic_navigation",
                                "1A3eii_Other_Transportation",
                                "1A4ai_Commercial/Institutional",
                                "1A4bi_Residential_stationary",
                                "1A4bii_Residential:Off-road",
                                "1A4ci_Agriculture/Forestry/Fishing:Stationary",
                                "1A4cii_Agriculture/Forestry/Fishing:Off-road",
                                "1A4ciii_Fishing",
                                "1A5b_Other:Mobile",
                                "1B1ai_Underground_mines:Abandoned",
                                "1B1ai_Underground_mines:Mining_activities",
                                "1B1ai_Underground_mines:Post-mining_activities",
                                "1B1aii_Surface_mines:Mining_activities",
                                "1B1b_Solid_Fuel_Transformation",
                                "1B2a1_Oil_exploration",
                                "1B2a2_Oil_Production",
                                "1B2a3_Oil_transport",
                                "1B2a4_Oil_refining/storage",
                                "1B2b1_Gas_exploration",
                                "1B2b3_Gas_processing",
                                "1B2b4_Gas_transmission_and_storage",
                                "1B2b5_Gas_distribution",
                                "1B2c_Flaring_Gas",
                                "1B2c_Flaring_Oil",
                                "1B2c_Venting_Gas",
                                "1B2c_Venting_Oil",
                                "2A1_Cement_Production",
                                "2A2_Lime_Production",
                                "2A3_Glass_production",
                                "2A4a_Other_process_uses_of_carbonates:ceramics",
                                "2A4b_Other_uses_of_Soda_Ash",
                                "2A4d_Other_process_uses_of_carbonates:other",
                                "2B1_Ammonia_Production",
                                "2B1_Chemical_Industry:Ammonia_production",
                                "2B10_Chemical_Industry:Other",
                                "2B2_Nitric_Acid_Production",
                                "2B3_Adipic_Acid_Production",
                                "2B6_Titanium_dioxide_production",
                                "2B7_Soda_Ash_Production",
                                "2B8a_Methanol_production",
                                "2B8b_Ethylene_Production",
                                "2B8c_Ethylene_Dichloride_and_Vinyl_Chloride_Monomer",
                                "2B8d_Ethylene_Oxide",
                                "2B8e_Acrylonitrile",
                                "2B8f_Carbon_black_production",
                                "2B8g_Petrochemical_and_carbon_black_production:Other",
                                "2B9a1_Fluorchemical_production:By-product_emissions",
                                "2B9b3_Fluorchemical_production:Fugitive_emissions",
                                "2C1a_Steel",
                                "2C1b_Pig_iron",
                                "2C1d_Sinter",
                                "2C3_Aluminium_Production",
                                "2C4_Magnesium_production",
                                "2C6_Zinc_Production",
                                "2D1_Lubricant_Use",
                                "2D2 Non-energy_products_from_fuels_and_solvent_use:Paraffin_wax_use",  # noqa: B950 - Line length caused by indentation
                                "2D3_Non-energy_products_from_fuels_and_solvent_use:Other",  # noqa: B950 - Line length caused by indentation
                                "2D4_Other_NEU",
                                "2E1_Integrated_circuit_or_semiconductor",
                                "2F1a_Commercial_refrigeration",
                                "2F1b_Domestic_refrigeration",
                                "2F1c_Industrial_refrigeration",
                                "2F1d_Transport_refrigeration",
                                "2F1e_Mobile_air_conditioning",
                                "2F1f_Stationary_air_conditioning",
                                "2F2a_Closed_foam_blowing_agents",
                                "2F2b_Open_foam_blowing_agents",
                                "2F3_Fire_Protection",
                                "2F4a_Metered_dose_inhalers",
                                "2F4b_Aerosols:Other",
                                "2F5_Solvents",
                                "2F6b_Other_Applications:Contained-Refrigerant_containers",  # noqa: B950 - Line length caused by indentation
                                "2F6b_Other_Applications:Contained-Refrigerant_Processing",  # noqa: B950 - Line length caused by indentation
                                "2G1_Electrical_equipment",
                                "2G2_Military_applications",
                                "2G2_Particle_accelerators",
                                "2G2e_Electronics_and_shoes",
                                "2G2e_Tracer_gas",
                                "2G3a_Medical aplications",
                                "2G3b_N2O_from_product_uses:_Other",
                                "2G4_Other_product_manufacture_and_use",
                                "2G4_Other_product_manufacture_and_use-baking_soda",
                                "3A1a Enteric Fermentation - dairy cows",
                                "3A1b Enteric Fermentation - other cattle",
                                "3A2 Enteric Fermentation - sheep",
                                "3A3 Enteric Fermentation - swine",
                                "3A4 Enteric Fermentation - other livestock",
                                "3B11a Manure management - CH4 - dairy cows",
                                "3B11b Manure management - CH4 - other cattle",
                                "3B12 Manure management - CH4 - sheep",
                                "3B13 Manure management - CH4 - swine",
                                "3B14 Manure management - CH4 - other livestock",
                                "3B21a Manure management - N2O and NMVOC - dairy cattle",  # noqa: B950 - Line length caused by indentation
                                "3B21b Manure management - N2O and NMVOC - other cattle",  # noqa: B950 - Line length caused by indentation
                                "3B22 Manure management - N2O and NMVOC - sheep",
                                "3B23 Manure management - N2O and NMVOC -swine ",
                                "3B24 Manure management - N2O and NMVOC - other livestock",  # noqa: B950 - Line length caused by indentation
                                "3B25 Manure management - N2O and NMVOC - indirect N2O emissions",  # noqa: B950 - Line length caused by indentation
                                "3D11 Inorganic N Fertilizers",
                                "3D12a Animal manure applied to soils",
                                "3D12b Sewage sludge applied to soils",
                                "3D13 Urine and Dung deposited by grazing animals",
                                "3D14 Crop Residues",
                                "3D15 Mineralisation/immobilisation associated with loss/gain of soil organic matter",  # noqa: B950 - Line length caused by indentation
                                "3D16 Cultivation of Organic soils",
                                "3D21 Atmospheric Deposition",
                                "3D22 Nitrogen Leaching and Run-off",
                                "3F11_Field_burning",
                                "3F12_Field_burning",
                                "3F14_Field_burning",
                                "3F5_Field_burning",
                                "3G1_Liming - limestone",
                                "3G2_Liming - dolomite",
                                "3H Urea Application",
                                "4_Indirect_N2O_Emissions",
                                "4A_Forest Land_Emissions_from_Drainage",
                                "4A1_ Forest Land remaining Forest Land",
                                "4A2_1_Cropland converted to Forest Land",
                                "4A2_2_Grassland converted to Forest Land",
                                "4A2_4_Settlements converted to Forest Land",
                                "4A2_5_Other land converted to Forest Land",
                                "4A2_Cropland converted to Forest Land",
                                "4A2_Grassland converted to Forest Land",
                                "4A2_Land converted to Forest Land_Emissions_from_Fertilisation",  # noqa: B950 - Line length caused by indentation
                                "4A2_Other Land converted to Forest Land",
                                "4A2_Settlements converted to Forest Land",
                                "4B1_Cropland Remaining Cropland",
                                "4B1_Cropland_Remaining_Cropland",
                                "4B2_1_Forest Land converted to Cropland",
                                "4B2_2_Grassland converted to Cropland",
                                "4B2_4_Settlements converted to Cropland",
                                "4C1_Grassland Remaining Grassland",
                                "4C2_1_Forest Land converted to Grassland",
                                "4C2_2_Cropland converted to Grassland",
                                "4C2_3_Wetlands converted to Grassland",
                                "4C2_4_Settlements converted to Grassland",
                                "4D1_Wetlands remaining wetlands",
                                "4D2_Land converted to wetlands",
                                "4E1_Settlements remaining settlements",
                                "4E2_1_Forest Land converted to Settlements",
                                "4E2_2_Cropland converted to Settlements",
                                "4E2_3_Grassland converted to Settlements",
                                "4G_Harvested Wood Products",
                                "5A1a_Managed_Waste_Disposal_sites_anaerobic",
                                "5B1a_composting_municipal_solid_waste",
                                "5B2a_Anaerobic_digestion_municipal_solid_waste",
                                "5C1.1b_Biogenic:Sewage_sludge",
                                "5C1.2a_Non-biogenic:municipal_solid_waste",
                                "5C1.2b_Non-biogenic:Clinical_waste",
                                "5C1.2b_Non-biogenic:Other_Chemical_waste",
                                "5C2.2b_Non-biogenic:Other",
                                "5C2.2b_Non-biogenic:Other_Accidental fires (vehicles)",
                                "5D1_Domestic_wastewater_treatment",
                                "5D2_Industrial_wastewater_treatment",
                            ]
                        ),
                        nullable=True,
                    ),
                    "BaseYear": Column(
                        pandas_dtype=float64,
                        checks=Check.in_range(float(-10000), float(650000)),
                    ),
                    "199[0589]|20[01][0-9]": Column(
                        pandas_dtype=float64,
                        checks=Check.in_range(float(-10000), float(650000)),
                        nullable=True,
                        regex=True,
                    ),
                },
                coerce=True,
                strict=True,
            ),
            "transformed": DataFrameSchema(
                columns={
                    "NCFormat": Column(
                        pandas_dtype=str,
                        checks=Check.isin(
                            [
                                "Agriculture",
                                "Agriculture Total",
                                "Business",
                                "Business Total",
                                "Energy Supply",
                                "Energy Supply Total",
                                "Grand Total",
                                "Industrial processes",
                                "Industrial processes Total",
                                "Land use, land use change and forestry",
                                "Land use, land use change and forestry Total",
                                "Public",
                                "Public Total",
                                "Residential",
                                "Residential Total",
                                "Transport",
                                "Transport Total",
                                "Waste Management",
                                "Waste Management Total",
                            ]
                        ),
                        nullable=True,
                    ),
                    "IPCC": Column(
                        pandas_dtype=str,
                        checks=Check.isin(
                            [
                                "1A1ai_Public_Electricity&Heat_Production",
                                "1A1b_Petroleum_Refining",
                                "1A1ci_Manufacture_of_solid_fuels",
                                "1A1cii_Oil_and_gas_extraction",
                                "1A1ciii_Other_energy_industries",
                                "1A2a_Iron_and_steel",
                                "1A2b_Non-Ferrous_Metals",
                                "1A2c_Chemicals",
                                "1A2d_Pulp_Paper_Print",
                                "1A2e_food_processing_beverages_and_tobacco",
                                "1A2f_Non-metallic_minerals",
                                "1A2gvii_Off-road_vehicles_and_other_machinery",
                                "1A2gviii_Other_manufacturing_industries_and_construction",  # noqa: B950 - Line length caused by indentation
                                "1A3a_Domestic_aviation",
                                "1A3bi_Cars",
                                "1A3bii_Light_duty_trucks",
                                "1A3biii_Heavy_duty_trucks_and_buses",
                                "1A3biv_Motorcycles",
                                "1A3bv_Other_road_transport",
                                "1A3c_Railways",
                                "1A3d_Domestic_navigation",
                                "1A3eii_Other_Transportation",
                                "1A4ai_Commercial/Institutional",
                                "1A4bi_Residential_stationary",
                                "1A4bii_Residential:Off-road",
                                "1A4ci_Agriculture/Forestry/Fishing:Stationary",
                                "1A4cii_Agriculture/Forestry/Fishing:Off-road",
                                "1A4ciii_Fishing",
                                "1A5b_Other:Mobile",
                                "1B1ai_Underground_mines:Abandoned",
                                "1B1ai_Underground_mines:Mining_activities",
                                "1B1ai_Underground_mines:Post-mining_activities",
                                "1B1aii_Surface_mines:Mining_activities",
                                "1B1b_Solid_Fuel_Transformation",
                                "1B2a1_Oil_exploration",
                                "1B2a2_Oil_Production",
                                "1B2a3_Oil_transport",
                                "1B2a4_Oil_refining/storage",
                                "1B2b1_Gas_exploration",
                                "1B2b3_Gas_processing",
                                "1B2b4_Gas_transmission_and_storage",
                                "1B2b5_Gas_distribution",
                                "1B2c_Flaring_Gas",
                                "1B2c_Flaring_Oil",
                                "1B2c_Venting_Gas",
                                "1B2c_Venting_Oil",
                                "2A1_Cement_Production",
                                "2A2_Lime_Production",
                                "2A3_Glass_production",
                                "2A4a_Other_process_uses_of_carbonates:ceramics",
                                "2A4b_Other_uses_of_Soda_Ash",
                                "2A4d_Other_process_uses_of_carbonates:other",
                                "2B1_Ammonia_Production",
                                "2B1_Chemical_Industry:Ammonia_production",
                                "2B10_Chemical_Industry:Other",
                                "2B2_Nitric_Acid_Production",
                                "2B3_Adipic_Acid_Production",
                                "2B6_Titanium_dioxide_production",
                                "2B7_Soda_Ash_Production",
                                "2B8a_Methanol_production",
                                "2B8b_Ethylene_Production",
                                "2B8c_Ethylene_Dichloride_and_Vinyl_Chloride_Monomer",
                                "2B8d_Ethylene_Oxide",
                                "2B8e_Acrylonitrile",
                                "2B8f_Carbon_black_production",
                                "2B8g_Petrochemical_and_carbon_black_production:Other",
                                "2B9a1_Fluorchemical_production:By-product_emissions",
                                "2B9b3_Fluorchemical_production:Fugitive_emissions",
                                "2C1a_Steel",
                                "2C1b_Pig_iron",
                                "2C1d_Sinter",
                                "2C3_Aluminium_Production",
                                "2C4_Magnesium_production",
                                "2C6_Zinc_Production",
                                "2D1_Lubricant_Use",
                                "2D2 Non-energy_products_from_fuels_and_solvent_use:Paraffin_wax_use",  # noqa: B950 - Line length caused by indentation
                                "2D3_Non-energy_products_from_fuels_and_solvent_use:Other",  # noqa: B950 - Line length caused by indentation
                                "2D4_Other_NEU",
                                "2E1_Integrated_circuit_or_semiconductor",
                                "2F1a_Commercial_refrigeration",
                                "2F1b_Domestic_refrigeration",
                                "2F1c_Industrial_refrigeration",
                                "2F1d_Transport_refrigeration",
                                "2F1e_Mobile_air_conditioning",
                                "2F1f_Stationary_air_conditioning",
                                "2F2a_Closed_foam_blowing_agents",
                                "2F2b_Open_foam_blowing_agents",
                                "2F3_Fire_Protection",
                                "2F4a_Metered_dose_inhalers",
                                "2F4b_Aerosols:Other",
                                "2F5_Solvents",
                                "2F6b_Other_Applications:Contained-Refrigerant_containers",  # noqa: B950 - Line length caused by indentation
                                "2F6b_Other_Applications:Contained-Refrigerant_Processing",  # noqa: B950 - Line length caused by indentation
                                "2G1_Electrical_equipment",
                                "2G2_Military_applications",
                                "2G2_Particle_accelerators",
                                "2G2e_Electronics_and_shoes",
                                "2G2e_Tracer_gas",
                                "2G3a_Medical aplications",
                                "2G3b_N2O_from_product_uses:_Other",
                                "2G4_Other_product_manufacture_and_use",
                                "2G4_Other_product_manufacture_and_use-baking_soda",
                                "3A1a Enteric Fermentation - dairy cows",
                                "3A1b Enteric Fermentation - other cattle",
                                "3A2 Enteric Fermentation - sheep",
                                "3A3 Enteric Fermentation - swine",
                                "3A4 Enteric Fermentation - other livestock",
                                "3B11a Manure management - CH4 - dairy cows",
                                "3B11b Manure management - CH4 - other cattle",
                                "3B12 Manure management - CH4 - sheep",
                                "3B13 Manure management - CH4 - swine",
                                "3B14 Manure management - CH4 - other livestock",
                                "3B21a Manure management - N2O and NMVOC - dairy cattle",  # noqa: B950 - Line length caused by indentation
                                "3B21b Manure management - N2O and NMVOC - other cattle",  # noqa: B950 - Line length caused by indentation
                                "3B22 Manure management - N2O and NMVOC - sheep",
                                "3B23 Manure management - N2O and NMVOC -swine ",
                                "3B24 Manure management - N2O and NMVOC - other livestock",  # noqa: B950 - Line length caused by indentation
                                "3B25 Manure management - N2O and NMVOC - indirect N2O emissions",  # noqa: B950 - Line length caused by indentation
                                "3D11 Inorganic N Fertilizers",
                                "3D12a Animal manure applied to soils",
                                "3D12b Sewage sludge applied to soils",
                                "3D13 Urine and Dung deposited by grazing animals",
                                "3D14 Crop Residues",
                                "3D15 Mineralisation/immobilisation associated with loss/gain of soil organic matter",  # noqa: B950 - Line length caused by indentation                               "3D16 Cultivation of Organic soils",
                                "3D21 Atmospheric Deposition",
                                "3D22 Nitrogen Leaching and Run-off",
                                "3F11_Field_burning",
                                "3F12_Field_burning",
                                "3F14_Field_burning",
                                "3F5_Field_burning",
                                "3G1_Liming - limestone",
                                "3G2_Liming - dolomite",
                                "3H Urea Application",
                                "4_Indirect_N2O_Emissions",
                                "4A_Forest Land_Emissions_from_Drainage",
                                "4A1_ Forest Land remaining Forest Land",
                                "4A2_1_Cropland converted to Forest Land",
                                "4A2_2_Grassland converted to Forest Land",
                                "4A2_4_Settlements converted to Forest Land",
                                "4A2_5_Other land converted to Forest Land",
                                "4A2_Cropland converted to Forest Land",
                                "4A2_Grassland converted to Forest Land",
                                "4A2_Land converted to Forest Land_Emissions_from_Fertilisation",  # noqa: B950 - Line length caused by indentation
                                "4A2_Other Land converted to Forest Land",
                                "4A2_Settlements converted to Forest Land",
                                "4B1_Cropland Remaining Cropland",
                                "4B1_Cropland_Remaining_Cropland",
                                "4B2_1_Forest Land converted to Cropland",
                                "4B2_2_Grassland converted to Cropland",
                                "4B2_4_Settlements converted to Cropland",
                                "4C1_Grassland Remaining Grassland",
                                "4C2_1_Forest Land converted to Grassland",
                                "4C2_2_Cropland converted to Grassland",
                                "4C2_3_Wetlands converted to Grassland",
                                "4C2_4_Settlements converted to Grassland",
                                "4D1_Wetlands remaining wetlands",
                                "4D2_Land converted to wetlands",
                                "4E1_Settlements remaining settlements",
                                "4E2_1_Forest Land converted to Settlements",
                                "4E2_2_Cropland converted to Settlements",
                                "4E2_3_Grassland converted to Settlements",
                                "4G_Harvested Wood Products",
                                "5A1a_Managed_Waste_Disposal_sites_anaerobic",
                                "5B1a_composting_municipal_solid_waste",
                                "5B2a_Anaerobic_digestion_municipal_solid_waste",
                                "5C1.1b_Biogenic:Sewage_sludge",
                                "5C1.2a_Non-biogenic:municipal_solid_waste",
                                "5C1.2b_Non-biogenic:Clinical_waste",
                                "5C1.2b_Non-biogenic:Other_Chemical_waste",
                                "5C2.2b_Non-biogenic:Other",
                                "5C2.2b_Non-biogenic:Other_Accidental fires (vehicles)",
                                "5D1_Domestic_wastewater_treatment",
                                "5D2_Industrial_wastewater_treatment",
                            ]
                        ),
                        nullable=True,
                    ),
                    "EmissionYear": Column(
                        pandas_dtype=int64,
                        checks=Check.greater_than_or_equal_to(1990),
                    ),
                    "CO2 Equiv": Column(
                        pandas_dtype=float64,
                        nullable=True,
                    ),
                },
                coerce=True,
                strict=True,
            ),
            "enriched": DataFrameSchema(
                columns={
                    "EmissionYear": Column(
                        pandas_dtype=int64,
                        checks=Check.greater_than_or_equal_to(1990),
                    ),
                    "CO2 Equiv": Column(
                        pandas_dtype=float64,
                        nullable=True,
                    ),
                    "OIF_category": Column(
                        pandas_dtype=str,
                        checks=Check.isin(
                            [
                                "Forestry sink",
                                "Agriculture",
                                "Fluorinated gases",
                                "Land use & land use change",
                                "Waste",
                            ]
                        ),
                    ),
                },
                coerce=True,
                strict=True,
            ),
        },
        "four": {
            "extracted": DataFrameSchema(
                columns={
                    "Year": Column(
                        pandas_dtype=int,
                        checks=Check.in_range(1987, 2019),
                        allow_duplicates=False,
                    ),
                    "Site": Column(
                        pandas_dtype=str,
                        checks=Check.equal_to("All sites"),
                    ),
                    "Annual average maximum daily 8-hour mean O3 concentration (µg/m3)": Column(  # noqa: B950
                        pandas_dtype=float,
                        checks=Check.in_range(50.0, 80.0),
                    ),
                    "95% confidence interval for 'All sites' (+/-)": Column(
                        pandas_dtype=float,
                        checks=Check.in_range(0.0, 20.0),
                    ),
                }
            ),
            "enriched": DataFrameSchema(
                columns={
                    "Year": Column(
                        pandas_dtype=int,
                        checks=Check.in_range(1987, 2019),
                        allow_duplicates=False,
                    ),
                    "Site": Column(
                        pandas_dtype=str,
                        checks=Check.equal_to("All sites"),
                    ),
                    "Annual average maximum daily 8-hour mean O3 concentration (µg/m3)": Column(  # noqa: B950
                        pandas_dtype=float,
                        checks=Check.in_range(50.0, 80.0),
                    ),
                    "95% confidence interval for 'All sites' (+/-)": Column(
                        pandas_dtype=float,
                        checks=Check.in_range(0.0, 20.0),
                    ),
                    "Lower_CI_bound": Column(
                        pandas_dtype=float,
                        checks=Check.in_range(30.0, 80.0),
                    ),
                    "Upper_CI_bound": Column(
                        pandas_dtype=float,
                        checks=Check.in_range(60.0, 80.0),
                    ),
                },
                checks=[
                    Check(
                        lambda df: df["Lower_CI_bound"]
                        == (
                            df[
                                "Annual average maximum daily 8-hour mean O3 concentration (µg/m3)"  # noqa: B950
                            ]
                            - df["95% confidence interval for 'All sites' (+/-)"]
                        ),
                    ),
                    Check(
                        lambda df: df["Upper_CI_bound"]
                        == (
                            df[
                                "Annual average maximum daily 8-hour mean O3 concentration (µg/m3)"  # noqa: B950
                            ]
                            + df["95% confidence interval for 'All sites' (+/-)"]
                        ),
                    ),
                ],
            ),
        },
        "five": {
            "extracted": DataFrameSchema(
                columns={
                    "Year": Column(
                        pandas_dtype=int64,
                        checks=Check.in_range(1997, 2019),
                        allow_duplicates=False,
                    ),
                    "Site": Column(
                        pandas_dtype=str,
                        checks=Check.equal_to("All sites"),
                    ),
                    "Annual Mean NO2 concentration (µg/m3)": Column(
                        pandas_dtype=float64,
                        checks=Check.in_range(25.0, 65.0),
                    ),
                    "95% confidence interval for 'All sites' (+/-)": Column(
                        pandas_dtype=float64,
                        checks=Check.in_range(0.0, 15.0),
                    ),
                },
                coerce=True,
                strict=True,
            ),
            "enriched": DataFrameSchema(
                columns={
                    "Year": Column(
                        pandas_dtype=int64,
                        checks=Check.in_range(1997, 2019),
                        allow_duplicates=False,
                    ),
                    "Site": Column(
                        pandas_dtype=str,
                        checks=Check.equal_to("All sites"),
                    ),
                    "Annual Mean NO2 concentration (µg/m3)": Column(
                        pandas_dtype=float64,
                        checks=Check.in_range(25.0, 65.0),
                    ),
                    "95% confidence interval for 'All sites' (+/-)": Column(
                        pandas_dtype=float64,
                        checks=Check.in_range(0.0, 15.0),
                    ),
                    "Lower_CI_bound": Column(
                        pandas_dtype=float64,
                        checks=Check.in_range(25.0, 55.0),
                    ),
                    "Upper_CI_bound": Column(
                        pandas_dtype=float64,
                        checks=Check.in_range(30.0, 75.0),
                    ),
                },
                checks=[
                    Check(
                        lambda df: df["Lower_CI_bound"]
                        == (
                            df["Annual Mean NO2 concentration (µg/m3)"]
                            - df["95% confidence interval for 'All sites' (+/-)"]
                        ),
                    ),
                    Check(
                        lambda df: df["Upper_CI_bound"]
                        == (
                            df["Annual Mean NO2 concentration (µg/m3)"]
                            + df["95% confidence interval for 'All sites' (+/-)"]
                        ),
                    ),
                ],
                coerce=True,
                strict=True,
            ),
        },
    },
}

with open("/home/edfawcetttaylor/repos/oiflib/data/schema.pkl", "wb") as file:
    dump(dict_schema, file)
