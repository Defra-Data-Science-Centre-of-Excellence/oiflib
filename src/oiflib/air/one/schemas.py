"""Schemas for Air One datasets."""

from typing import List

from pandera import Check, Column, DataFrameSchema, Float, Int, String

values_ShortPollName_extracted: List[str] = [
    "B[a]p",
    "B[a]p Total",
    "CO",
    "CO Total",
    "Dioxins",
    "Dioxins Total",
    "NH3",
    "NH3 Total",
    "NOx",
    "NOx Total",
    "Pb",
    "Pb Total",
    "PM10",
    "PM10 Total",
    "PM2.5",
    "PM2.5 Total",
    "SO2",
    "SO2 Total",
    "VOC",
    "VOC Total",
]

values_NFRCode: List[str] = [
    "1A1a",
    "1A1b",
    "1A1c",
    "1A2a",
    "1A2b",
    "1A2c",
    "1A2d",
    "1A2e",
    "1A2f",
    "1A2gvii",
    "1A2gviii",
    "1A3ai(i)",
    "1A3aii(i)",
    "1A3bi",
    "1A3bii",
    "1A3biii",
    "1A3biv",
    "1A3bv",
    "1A3bvi",
    "1A3bvii",
    "1A3c",
    "1A3dii",
    "1A3eii",
    "1A4ai",
    "1A4bi",
    "1A4bii",
    "1A4ci",
    "1A4cii",
    "1A4ciii",
    "1A5b",
    "1B1a",
    "1B1b",
    "1B2ai",
    "1B2aiv",
    "1B2av",
    "1B2b",
    "1B2c",
    "2A1",
    "2A3",
    "2A5a",
    "2A5b",
    "2A6",
    "2B10a",
    "2B10b",
    "2B2",
    "2B3",
    "2B6",
    "2B7",
    "2C1",
    "2C3",
    "2C4",
    "2C5",
    "2C6",
    "2C7a",
    "2C7b",
    "2C7c",
    "2D3a",
    "2D3b",
    "2D3d",
    "2D3e",
    "2D3f",
    "2D3g",
    "2D3h",
    "2D3i",
    "2G",
    "2H1",
    "2H2",
    "2H3",
    "2I",
    "2K",
    "3B1a",
    "3B1b",
    "3B2",
    "3B3",
    "3B4d",
    "3B4e",
    "3B4gi",
    "3B4gii",
    "3B4giii",
    "3B4giv",
    "3B4h",
    "3Da1",
    "3Da2a",
    "3Da2b",
    "3Da2c",
    "3Da3",
    "3Da4",
    "3Dc",
    "3De",
    "3F",
    "5A",
    "5B1",
    "5B2",
    "5C1a",
    "5C1bii",
    "5C1biii",
    "5C1biv",
    "5C1bv",
    "5C2",
    "5D1",
    "5D2",
    "5E",
    "6A",
]

values_SourceName: List[str] = [
    "Accidental fires - dwellings",
    "Accidental fires - other buildings",
    "Accidental fires - vehicles",
    "Adipic acid production",
    "Aerosols - carcare products",
    "Aerosols - cosmetics and toiletries",
    "Aerosols - household products",
    "Agricultural engines",
    "Agricultural Horses FAM - direct",
    "Agricultural Horses PRP - direct",
    "Agricultural Horses Wastes - Direct",
    "Agricultural operations",
    "Agricultural waste burning",
    "Agriculture - agrochemicals use",
    "Agriculture - mobile machinery",
    "Agriculture - stationary combustion",
    "Aircraft -  military",
    "Aircraft - domestic take off and landing",
    "Aircraft - international take off and landing",
    "Aircraft - support vehicles",
    "Aircraft between UK and Bermuda - TOL",
    "Aircraft between UK and CDs - TOL",
    "Aircraft between UK and Gibraltar - TOL",
    "Aircraft between UK and other OTs (excl Gib. and Bermuda) - TOL",
    "Aircraft engines",
    "Alumina production",
    "Ammonia production - combustion",
    "Anaerobic Digestion",
    "Arable",
    "Arable - Direct",
    "Autogeneration - exported to grid",
    "Autogenerators",
    "Basic oxygen furnaces",
    "Bitumen use",
    "Blast furnaces",
    "Bonfire night",
    "Bread baking",
    "Brewing - fermentation",
    "Brewing - wort boiling",
    "Brick manufacture - Fletton",
    "Brick manufacture - non Fletton",
    "Capacitors",
    "Cement - non-decarbonising",
    "Cement and concrete batching",
    "Cement production - combustion",
    "Charcoal production",
    "Chemical industry - alkyl lead",
    "Chemical industry - ammonia based fertilizer",
    "Chemical industry - ammonia use",
    "Chemical industry - carbon black",
    "Chemical industry - chromium chemicals",
    "Chemical industry - general",
    "Chemical industry - halogenated chemicals",
    "Chemical industry - magnesia",
    "Chemical industry - nitric acid use",
    "Chemical industry - pesticide production",
    "Chemical industry - phosphate based fertilizers",
    "Chemical industry - pigment manufacture",
    "Chemical industry - reforming",
    "Chemical industry - soda ash",
    "Chemical industry - sulphuric acid use",
    "Chemical industry - titanium dioxide",
    "Chemicals (combustion)",
    "Cider manufacture",
    "Cigarette smoking",
    "Coal tar and bitumen processes",
    "Coal tar distillation",
    "Coating manufacture - adhesives",
    "Coating manufacture - inks",
    "Coating manufacture - other coatings",
    "Coke production",
    "Cold rolling of steel",
    "Collieries - combustion",
    "Composting (at household)",
    "Composting (at permit sites)",
    "Construction of apartment buildings",
    "Construction of houses",
    "Copper alloy and semis production",
    "Crematoria",
    "Creosote use",
    "Cultivated crops",
    "Dairy - Dairy Cows",
    "Decorative paint - retail decorative",
    "Decorative paint - trade decorative",
    "Deep-mined coal",
    "Deer FAM - Direct",
    "Deer PRP - Direct",
    "Deer Wastes - Direct",
    "Dewatering of lead concentrates",
    "Domestic combustion",
    "Domestic Horses FAM - Direct",
    "Domestic Horses PRP - Direct",
    "Domestic Horses Wastes",
    "Domestic pets",
    "Dry cleaning",
    "Electric arc furnaces",
    "FAM - direct",
    "Field burning",
    "Film coating",
    "Fireworks",
    "Fishing vessels",
    "Foam blowing",
    "Food & drink, tobacco (combustion)",
    "Foot and mouth pyres",
    "Foundries",
    "Fragmentisers",
    "Gas leakage",
    "Gas production",
    "Gasification processes",
    "Glass – ballotini",
    "Glass - container",
    "Glass - continuous filament glass fibre",
    "Glass - domestic",
    "Glass - flat",
    "Glass - frits",
    "Glass - glass wool",
    "Glass - lead crystal",
    "Glass - special",
    "Glazed ceramics",
    "Goats FAM - Direct",
    "Goats PRP - Direct",
    "Goats Wastes - Direct",
    "Grass",
    "Grass - Direct",
    "Grazing",
    "Hot rolling of steel",
    "House and garden machinery",
    "Housing",
    "Incineration",
    "Incineration - animal carcases",
    "Incineration - chemical waste",
    "Incineration - clinical waste",
    "Incineration - sewage sludge",
    "Industrial adhesives - other",
    "Industrial adhesives - pressure sensitive tapes",
    "Industrial coatings - agricultural and construction",
    "Industrial coatings - aircraft",
    "Industrial coatings - automotive",
    "Industrial coatings - coil coating",
    "Industrial coatings - commercial vehicles",
    "Industrial coatings - drum",
    "Industrial coatings - high performance",
    "Industrial coatings - marine",
    "Industrial coatings - metal and plastic",
    "Industrial coatings - metal packaging",
    "Industrial coatings - vehicle refinishing",
    "Industrial coatings - wood",
    "Industrial engines",
    "Industrial off-road mobile machinery",
    "Industrial Waste Water Treatment",
    "Infant emissions from nappies",
    "Inland goods-carrying vessels",
    "Integrated steelworks - other processes",
    "Integrated steelworks - stockpiles",
    "Iron and steel - combustion plant",
    "Iron and steel - flaring",
    "Landfill",
    "Landspreading of manure digestates (from AD)",
    "Landspreading of non-manure digestates (from AD)",
    "Lead battery manufacture",
    "Leather coating",
    "Leather degreasing",
    "Lime production - non decarbonising",
    "Magnesium alloying",
    "Malting - all",
    "Marine engines",
    "Methanol production – combustion",
    "Miscellaneous industrial/commercial combustion",
    "Motorboats / workboats (e.g. canal boats, dredgers, service boats, tourist boats, river boats)",  # noqa
    "Nickel production",
    "Nitric acid production",
    "Non-aerosol products - automotive products",
    "Non-aerosol products - cosmetics and toiletries",
    "Non-aerosol products - domestic adhesives",
    "Non-aerosol products - household products",
    "Non-aerosol products - paint thinner",
    "Non-Ferrous Metal (combustion)",
    "Non-ferrous metal processes",
    "Non-residential construction",
    "Nuclear fuel production",
    "Open-cast coal",
    "Other cattle - Beef females for slaughter",
    "Other cattle - Bulls for breeding",
    "Other cattle - Cereal fed bull",
    "Other cattle - Cows",
    "Other cattle - Dairy Calves Female",
    "Other cattle - Dairy In Calf Heifers",
    "Other cattle - Dairy Replacements Female",
    "Other cattle - Heifers for breeding",
    "Other cattle - Steers",
    "Other food - animal feed manufacture",
    "Other food - cakes biscuits and cereals",
    "Other food - coffee roasting",
    "Other food - margarine and other solid fats",
    "Other food - meat fish and poultry",
    "Other food - sugar production",
    "Other industrial combustion",
    "Other industry - asphalt manufacture",
    "Other industry - part B processes",
    "Other non-ferrous metal processes",
    "Other rubber products",
    "Other solvent use",
    "Paper coating",
    "Paper production",
    "Parks, Gardens & Golf courses",
    "Personal watercraft e.g. jet ski",
    "Petrol stations - petrol delivery",
    "Petrol stations - spillages",
    "Petrol stations - storage tanks",
    "Petrol stations - vehicle refuelling",
    "Petrol terminals - storage",
    "Petrol terminals - tanker loading",
    "Petroleum processes",
    "Pig - Boar",
    "Pig - Fattening Pig < 20 kg",
    "Pig - Fattening Pig > 80 kg",
    "Pig - Fattening Pig 20 to 80 kg",
    "Pig - Gilt",
    "Pig - Sow",
    "Poultry - Breeding Flock",
    "Poultry - Broilers",
    "Poultry - Ducks",
    "Poultry - Geese",
    "Poultry - Growing Pullets",
    "Poultry - Laying Hens",
    "Poultry - Other",
    "Poultry - Turkeys",
    "Power stations",
    "Primary aluminium production - anode baking",
    "Primary aluminium production - general",
    "Primary aluminium production - pre-baked anode process",
    "Primary aluminium production - vertical stud Soderberg process",
    "Primary lead/zinc production",
    "Printing - flexible packaging",
    "Printing - heatset web offset",
    "Printing - metal decorating",
    "Printing - newspapers",
    "Printing - other flexography",
    "Printing - other inks",
    "Printing - other offset",
    "Printing - overprint varnishes",
    "Printing - print chemicals",
    "Printing - publication gravure",
    "Printing - screen printing",
    "Professional Horses FAM - Direct",
    "Professional Horses PRP - Direct",
    "Professional horses wastes",
    "PRP - direct",
    "Public sector combustion",
    "Pulp, Paper and Print (combustion)",
    "Quarrying",
    "Rail - coal",
    "Railways - freight",
    "Railways - intercity",
    "Railways - regional",
    "Railways - stationary combustion",
    "Refineries - combustion",
    "Refineries - drainage",
    "Refineries - flares",
    "Refineries - general",
    "Refineries - process",
    "Refineries - road/rail loading",
    "Refineries - tankage",
    "Refractories - chromite based",
    "Refractories - non chromite based",
    "Regeneration of activated carbon",
    "Road construction",
    "Road dressings",
    "Road transport - buses and coaches - motorway driving",
    "Road transport - buses and coaches - rural driving",
    "Road transport - buses and coaches - urban driving",
    "Road transport - cars - cold start",
    "Road transport - cars - evaporative",
    "Road transport - cars - motorway driving",
    "Road transport - cars - rural driving",
    "Road transport - cars - urban driving",
    "Road Transport - cars Dioxins/PCP",
    "Road transport - HGV articulated - motorway driving",
    "Road transport - HGV articulated - rural driving",
    "Road transport - HGV articulated - urban driving",
    "Road transport - HGV rigid - motorway driving",
    "Road transport - HGV rigid - rural driving",
    "Road transport - HGV rigid - urban driving",
    "Road Transport - HGVs/buses Dioxins",
    "Road transport - LGVs - cold start",
    "Road transport - LGVs - evaporative",
    "Road transport - LGVs - motorway driving",
    "Road transport - LGVs - rural driving",
    "Road transport - LGVs - urban driving",
    "Road Transport - LGVs Dioxins",
    "Road Transport - Mopeds & Motorcycles Dioxins",
    "Road transport - mopeds (<50cc 2st) - evaporative",
    "Road transport - mopeds (<50cc 2st) - urban driving",
    "Road transport - motorcycle (>50cc  2st) - evaporative",
    "Road transport - motorcycle (>50cc  2st) - rural driving",
    "Road transport - motorcycle (>50cc  2st) - urban driving",
    "Road transport - motorcycle (>50cc  4st) - evaporative",
    "Road transport - motorcycle (>50cc  4st) - motorway driving",
    "Road transport - motorcycle (>50cc  4st) - rural driving",
    "Road transport - motorcycle (>50cc  4st) - urban driving",
    "Road vehicle engines",
    "Sailing boats with auxiliary engines",
    "Sea going vessel loading",
    "Secondary aluminium production",
    "Secondary copper production",
    "Secondary lead production",
    "Seed oil extraction",
    "Sewage Sludge Application - Direct",
    "Sewage sludge decomposition",
    "Sheep - Ewe",
    "Sheep - Lamb",
    "Sheep - Ram",
    "Ship purging",
    "Shipping - coastal",
    "Shipping - naval",
    "Shipping between UK and Bermuda",
    "Shipping between UK and CDs",
    "Shipping between UK and Gibraltar",
    "Shipping between UK and OTs (excl. Gib and Bermuda)",
    "Sinter production",
    "Slag clement production",
    "Small-scale waste burning",
    "Solid smokeless fuel production",
    "Solvent and oil recovery",
    "Spirit manufacture - casking",
    "Spirit manufacture - distillation",
    "Spirit manufacture - fermentation",
    "Spirit manufacture - other maturation",
    "Spirit manufacture - Scotch whisky maturation",
    "Spirit manufacture - spent grain drying",
    "Spread Manure",
    "Storage",
    "Sugar beet processing",
    "Sulphuric acid production",
    "Surface cleaning - 111-trichloroethane",
    "Surface cleaning - dichloromethane",
    "Surface cleaning - hydrocarbons",
    "Surface cleaning - oxygenated solvents",
    "Surface cleaning - tetrachloroethylene",
    "Surface cleaning - trichloroethylene",
    "Textile coating",
    "Tin production",
    "Transformers",
    "Tyre manufacture",
    "Unglazed ceramics",
    "Upstream Gas Production - flaring",
    "Upstream Gas Production - fuel combustion",
    "Upstream Gas Production - Gas terminal storage",
    "Upstream Gas Production - Offshore Well Testing",
    "Upstream Gas Production - process emissions",
    "Upstream Gas Production - venting",
    "Upstream oil and gas production - combustion at gas separation plant",
    "Upstream Oil Production - flaring",
    "Upstream Oil Production - fuel combustion",
    "Upstream Oil Production - Offshore Oil Loading",
    "Upstream Oil Production - Offshore Well Testing",
    "Upstream Oil Production - Oil terminal storage",
    "Upstream Oil Production - Onshore Oil Loading",
    "Upstream Oil Production - process emissions",
    "Upstream Oil Production - venting",
    "Wastes",
    "Wastes - Direct",
    "Wine manufacture",
    "Wood impregnation - creosote",
    "Wood impregnation - general",
    "Wood impregnation - LOSP",
    "Wood products manufacture",
    "Yarding",
    "Zinc alloy and semis production",
    "Zinc oxide production",
]

schema_extracted: DataFrameSchema = DataFrameSchema(
    columns={
        "ShortPollName": Column(
            pandas_dtype=String,
            checks=[Check.isin(values_ShortPollName_extracted)],
        ),
        "NFRCode": Column(
            pandas_dtype=String,
            checks=[Check.isin(values_NFRCode)],
            nullable=True,
        ),
        "SourceName": Column(
            pandas_dtype=String,
            checks=[Check.isin(values_SourceName)],
            nullable=True,
        ),
        r"\d{4}": Column(pandas_dtype=Float, nullable=True, regex=True),
    },
    coerce=True,
    strict=True,
)

values_ShortPollName_transformed: List[str] = ["NH3", "NOx", "SO2", "NMVOC", "PM2.5"]

schema_transformed: DataFrameSchema = DataFrameSchema(
    columns={
        "ShortPollName": Column(
            pandas_dtype=String,
            checks=[Check.isin(values_ShortPollName_transformed)],
        ),
        "EmissionYear": Column(
            pandas_dtype=Int, checks=Check.greater_than_or_equal_to(1990)
        ),
        "Emission": Column(
            pandas_dtype=Float, checks=Check.greater_than_or_equal_to(0.0)
        ),
    },
    coerce=True,
    strict=True,
)

schema_enriched: DataFrameSchema = schema_transformed.add_columns(
    extra_schema_cols={
        "Index": Column(pandas_dtype=Float, checks=Check.greater_than_or_equal_to(0.0)),
    },
)
